-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local lIllil1liIilIllii1ili = assert local lIlI1ilI1ii1iI1l11l1l = select local i1ii1i1i11lIIllIIIi = tonumber local I1lill1lIII1l1Iiiil = unpack local lIliIlIIi1I111i1l1iil = pcall local lIl1ii1l11IIiIIliIi11 = setfenv local lIll1iiIilll11iIl11Ii = setmetatable local I1lI1iii11lil1i111I = type local lIlii1Ii1ll1iIIlilli1 = getfenv local IiI1II11i111llIIi11 = tostring local I1illIIIlIilllIilll = error local lIlIl1I1li1Iii1lIllIi = string.sub local iiilil1lI1Ill1IIiIl = string.byte local III1ill1I1i1I1l1i1I = string.char local lIl1I1l1lIllI1lli1Ili = string.rep local iIl1iiiI1Ii1I1I1i1I = string.gsub local iiiIlilI111Ili11iII = string.match local l1ll1lliiI1lI1iI1il = table.insert local IllIIlII1IllIi1Ill1 = iiilil1lI1Ill1IIiIl("|", 1) local llIllIil1iIiiIIi1ii, lIl11Ill1lll1I1IiIllI = #{6939}, #{ 5745, 6785, 3034, 180, 5804, 673, 3443, 30, 622, 1094, 6645, 5207, 5704, 4181, 597, 3434, 3194, 2543, 40, 5929 } + IllIIlII1IllIi1Ill1 + 130927 local lIl1111IlIIl1i1Ii1lli = {} local Il1lIl1I1iI1IlIiIi1 = 1 local iIiilIiIii1liii1Ii1, liIl11I1IiIliIIliil local function lIl1lIilIIill1IIlIl1l(lIlIi1IiilIIliIliIi11, ii1IIll111il1iiIlII) local IIi1ilIlilil1ill11l lIlIi1IiilIIliIliIi11 = iIl1iiiI1Ii1I1I1i1I(lIlIl1I1li1Iii1lIllIi(lIlIi1IiilIIliIliIi11, 5), "..", function(IliiIlIII1lI1lIi1il) if iiilil1lI1Ill1IIiIl(IliiIlIII1lI1lIi1il, 2) == 72 then IIi1ilIlilil1ill11l = i1ii1i1i11lIIllIIIi(lIlIl1I1li1Iii1lIllIi(IliiIlIII1lI1lIi1il, 1, 1)) return "" else local lIlliili11iII1II1i11i = III1ill1I1i1I1l1i1I(i1ii1i1i11lIIllIIIi(IliiIlIII1lI1lIi1il, 16)) if IIi1ilIlilil1ill11l then local illIlIll1i1iII1llIl = lIl1I1l1lIllI1lli1Ili(lIlliili11iII1II1i11i, IIi1ilIlilil1ill11l) IIi1ilIlilil1ill11l = nil return illIlIll1i1iII1llIl else return lIlliili11iII1II1i11i end end end) local function ili1ilIlllIl1li11il() local iIilIIl1lli1llllli1 = iiilil1lI1Ill1IIiIl(lIlIi1IiilIIliIliIi11, Il1lIl1I1iI1IlIiIi1, Il1lIl1I1iI1IlIiIi1) Il1lIl1I1iI1IlIiIi1 = Il1lIl1I1iI1IlIiIi1 + 1 return iIilIIl1lli1llllli1 end local function I1liI111lilI1IliIi1() local iIilIIl1lli1llllli1, lIlliili11iII1II1i11i, illIlIll1i1iII1llIl, ii1IliiilI1IlIliII1 = iiilil1lI1Ill1IIiIl(lIlIi1IiilIIliIliIi11, Il1lIl1I1iI1IlIiIi1, Il1lIl1I1iI1IlIiIi1 + 3) Il1lIl1I1iI1IlIiIi1 = Il1lIl1I1iI1IlIiIi1 + 4 return ii1IliiilI1IlIliII1 * 16777216 + illIlIll1i1iII1llIl * 65536 + lIlliili11iII1II1i11i * 256 + iIilIIl1lli1llllli1 end local function Ili1iiIi1iilII1I1II(Il1IIil11iiIliili1l, l1l1II1i1lIIiil1I1I, lI1i1IiiI1iiIlIIlil) if lI1i1IiiI1iiIlIIlil then local iIIllIllI11li1Il11i, I1iiil1I1li111il1Ii = 0, 0 for lllIiliIiIiili1l1I1 = l1l1II1i1lIIiil1I1I, lI1i1IiiI1iiIlIIlil do iIIllIllI11li1Il11i = iIIllIllI11li1Il11i + 2 ^ I1iiil1I1li111il1Ii * Ili1iiIi1iilII1I1II(Il1IIil11iiIliili1l, lllIiliIiIiili1l1I1) I1iiil1I1li111il1Ii = I1iiil1I1li111il1Ii + 1 end return iIIllIllI11li1Il11i else local I11lilI11ililI1I11I = 2 ^ (l1l1II1i1lIIiil1I1I - 1) return I11lilI11ililI1I11I <= Il1IIil11iiIliili1l % (I11lilI11ililI1I11I + I11lilI11ililI1I11I) and 1 or 0 end end local function Iilll1lil1lIliiI1lI() local iIilIIl1lli1llllli1, lIlliili11iII1II1i11i = I1liI111lilI1IliIi1(), I1liI111lilI1IliIi1() if iIilIIl1lli1llllli1 == 0 and lIlliili11iII1II1i11i == 0 then return 0 end return (-2 * Ili1iiIi1iilII1I1II(lIlliili11iII1II1i11i, 32) + 1) * 2 ^ (Ili1iiIi1iilII1I1II(lIlliili11iII1II1i11i, 21, 31) - 1023) * ((Ili1iiIi1iilII1I1II(lIlliili11iII1II1i11i, 1, 20) * 4294967296 + iIilIIl1lli1llllli1) / 4503599627370496 + 1) end local lIlii1Ill1lIIiilIIIiI = bit or bit32 local l1IililliiiiIi111ii = lIlii1Ill1lIIiilIIIiI and lIlii1Ill1lIIiilIIIiI.bxor or function(iIilIIl1lli1llllli1, lIlliili11iII1II1i11i) local lIl1IIi1iI11iIi11iI1i = 1 local illIlIll1i1iII1llIl = 0 while iIilIIl1lli1llllli1 > 0 and lIlliili11iII1II1i11i > 0 do local IIii111I11i1l1iIlil = iIilIIl1lli1llllli1 % 2 local il1l1llIIi11lI1I1lI = lIlliili11iII1II1i11i % 2 if IIii111I11i1l1iIlil ~= il1l1llIIi11lI1I1lI then illIlIll1i1iII1llIl = illIlIll1i1iII1llIl + lIl1IIi1iI11iIi11iI1i end iIilIIl1lli1llllli1 = (iIilIIl1lli1llllli1 - IIii111I11i1l1iIlil) / 2 lIlliili11iII1II1i11i = (lIlliili11iII1II1i11i - il1l1llIIi11lI1I1lI) / 2 lIl1IIi1iI11iIi11iI1i = lIl1IIi1iI11iIi11iI1i * 2 end if iIilIIl1lli1llllli1 < lIlliili11iII1II1i11i then iIilIIl1lli1llllli1 = lIlliili11iII1II1i11i end while iIilIIl1lli1llllli1 > 0 do local IIii111I11i1l1iIlil = iIilIIl1lli1llllli1 % 2 if IIii111I11i1l1iIlil > 0 then illIlIll1i1iII1llIl = illIlIll1i1iII1llIl + lIl1IIi1iI11iIi11iI1i end iIilIIl1lli1llllli1 = (iIilIIl1lli1llllli1 - IIii111I11i1l1iIlil) / 2 lIl1IIi1iI11iIi11iI1i = lIl1IIi1iI11iIi11iI1i * 2 end return illIlIll1i1iII1llIl end local function lIli1li11II1IilI1lI(Iill1l1111l11ililil) local lIlIlIl1Ii1IIi11il11i = { iiilil1lI1Ill1IIiIl(lIlIi1IiilIIliIliIi11, Il1lIl1I1iI1IlIiIi1, Il1lIl1I1iI1IlIiIi1 + 3) } Il1lIl1I1iI1IlIiIi1 = Il1lIl1I1iI1IlIiIi1 + 4 local iIilIIl1lli1llllli1 = l1IililliiiiIi111ii(lIlIlIl1Ii1IIi11il11i[1], liIl11I1IiIliIIliil) local lIlliili11iII1II1i11i = l1IililliiiiIi111ii(lIlIlIl1Ii1IIi11il11i[2], liIl11I1IiIliIIliil) local illIlIll1i1iII1llIl = l1IililliiiiIi111ii(lIlIlIl1Ii1IIi11il11i[3], liIl11I1IiIliIIliil) local ii1IliiilI1IlIliII1 = l1IililliiiiIi111ii(lIlIlIl1Ii1IIi11il11i[4], liIl11I1IiIliIIliil) liIl11I1IiIliIIliil = (141 * liIl11I1IiIliIIliil + Iill1l1111l11ililil) % 256 return ii1IliiilI1IlIliII1 * 16777216 + illIlIll1i1iII1llIl * 65536 + lIlliili11iII1II1i11i * 256 + iIilIIl1lli1llllli1 end local function llIiI1iII11l1I1ii11(lIll11l1ii11iIlIIiI1I) local iIIiliIlIi11lIlilIi = I1liI111lilI1IliIi1() local i1111lI11i1IIi11IIi = "" for lllIiliIiIiili1l1I1 = llIllIil1iIiiIIi1ii, iIIiliIlIi11lIlilIi do i1111lI11i1IIi11IIi = i1111lI11i1IIi11IIi .. III1ill1I1i1I1l1i1I(l1IililliiiiIi111ii(iiilil1lI1Ill1IIiIl(lIlIi1IiilIIliIliIi11, Il1lIl1I1iI1IlIiIi1 + lllIiliIiIiili1l1I1 - 1), iIiilIiIii1liii1Ii1)) iIiilIiIii1liii1Ii1 = (lIll11l1ii11iIlIIiI1I * iIiilIiIii1liii1Ii1 + 117) % 256 end Il1lIl1I1iI1IlIiIi1 = Il1lIl1I1iI1IlIiIi1 + iIIiliIlIi11lIlilIi return i1111lI11i1IIi11IIi end iIiilIiIii1liii1Ii1 = ili1ilIlllIl1li11il() liIl11I1IiIliIIliil = ili1ilIlllIl1li11il() local I1lIIil1IIlilllllIl = {} for lllIiliIiIiili1l1I1 = llIllIil1iIiiIIi1ii, ili1ilIlllIl1li11il() do local I11liilIilI1lIi111i = ili1ilIlllIl1li11il() local lIiili11ll1IIiIiI1i = (lllIiliIiIiili1l1I1 - 1) * 2 I1lIIil1IIlilllllIl[lIiili11ll1IIiIiI1i] = Ili1iiIi1iilII1I1II(I11liilIilI1lIi111i, 1, 4) I1lIIil1IIlilllllIl[lIiili11ll1IIiIiI1i + 1] = Ili1iiIi1iilII1I1II(I11liilIilI1lIi111i, 5, 8) end local function llilli1i11illl1Ili1() local Ill11i11Iii1l1i1iI1 = { {}, nil, {}, {}, {}, nil, nil } ili1ilIlllIl1li11il() ili1ilIlllIl1li11il() local llI11IIi1Ill1liiiil = I1liI111lilI1IliIi1() for lllIiliIiIiili1l1I1 = llIllIil1iIiiIIi1ii, llI11IIi1Ill1liiiil do Ill11i11Iii1l1i1iI1[3][lllIiliIiIiili1l1I1] = I1liI111lilI1IliIi1() end I1liI111lilI1IliIi1() local llI11IIi1Ill1liiiil = I1liI111lilI1IliIi1() for lllIiliIiIiili1l1I1 = llIllIil1iIiiIIi1ii, llI11IIi1Ill1liiiil do Ill11i11Iii1l1i1iI1[1][lllIiliIiIiili1l1I1 - llIllIil1iIiiIIi1ii] = llilli1i11illl1Ili1() end Ill11i11Iii1l1i1iI1[6] = ili1ilIlllIl1li11il() ili1ilIlllIl1li11il() I1liI111lilI1IliIi1() Ill11i11Iii1l1i1iI1[2] = ili1ilIlllIl1li11il() Ill11i11Iii1l1i1iI1[7] = ili1ilIlllIl1li11il() local iIiIil1IllIii1111II = I1liI111lilI1IliIi1() - (#{ 355, 6843, 4384, 3025, 1418, 2515, 1749, 6345, 1708, 1238, 3391, 3347, 4963, 5597, 4190, 562, 1258, 5846, 5133, 5280, 6662 } + IllIIlII1IllIi1Ill1 + 133653) local lIliI1iIllllII11iI1l1 = ili1ilIlllIl1li11il() for lllIiliIiIiili1l1I1 = llIllIil1iIiiIIi1ii, iIiIil1IllIii1111II do local Iill1IlIi1illii1ili = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local I11liilIilI1lIi111i = lIli1li11II1IilI1lI(lIliI1iIllllII11iI1l1) Iill1IlIi1illii1ili[6] = Ili1iiIi1iilII1I1II(I11liilIilI1lIi111i, #{891}, #{ 6447, 2592, 3376, 1022, 6497, 6822, 1581, 1601, 4797, 1384, 5219, 5493, 2046, 2114, 3644, 2203, 2385, 2167 }) Iill1IlIi1illii1ili[10] = Ili1iiIi1iilII1I1II(I11liilIilI1lIi111i, #{2283}, #{ 4280, 799, 2751, 6706, 5749, 5394, 4594, 4929, 936 }) Iill1IlIi1illii1ili[3] = Ili1iiIi1iilII1I1II(I11liilIilI1lIi111i, #{ 6107, 783, 539, 3736, 1076, 4140, 6292, 1401, 4453, 4277, 5009, 6663, 5539, 4384, 385, 6491, 1544, 5771, 4410, 6067 } + IllIIlII1IllIi1Ill1 + -117, #{ 624, 4859, 3456, 6480, 2750, 3225, 2004, 3792, 6288, 4131, 1271, 259, 3311, 6756, 338, 6053, 4576, 1046, 6945, 2304, 6830 } + IllIIlII1IllIi1Ill1 + -113) Iill1IlIi1illii1ili[7] = Ili1iiIi1iilII1I1II(I11liilIilI1lIi111i, #{ 2512, 927, 5902, 636, 5746, 2175, 5570, 4318, 3200, 4771, 4264, 2699, 6199, 511, 5831, 1338, 2204, 6452, 5762 }, #{ 6261, 5178, 6261, 1038, 4765, 2698, 4875, 4928, 4251, 2119, 2684, 5253, 1606, 3898, 3658, 162, 6042, 6968, 448, 1099, 335, 1228, 1248 } + IllIIlII1IllIi1Ill1 + -121) Iill1IlIi1illii1ili[2] = Ili1iiIi1iilII1I1II(I11liilIilI1lIi111i, #{ 2371, 6250, 1590, 1503, 4438, 6054, 5872, 3064, 5963, 2615 }, #{ 2, 4922, 6671, 6730, 1546, 308, 3248, 3395, 2940, 5352, 5908, 1638, 4243, 3795, 2579, 3828, 3345, 5272 }) Ill11i11Iii1l1i1iI1[5][lllIiliIiIiili1l1I1] = Iill1IlIi1illii1ili end I1liI111lilI1IliIi1() local llI11IIi1Ill1liiiil = I1liI111lilI1IliIi1() - (#{ 2988, 982, 3879, 6244, 4050, 4735, 3242, 3435, 5637, 6946, 6421, 2768, 4102, 6684, 2464, 5252, 3504, 1422, 3488, 4527 } + IllIIlII1IllIi1Ill1 + 133574) local lIiIlIIl1I1Ii1l1i1l = ili1ilIlllIl1li11il() for lllIiliIiIiili1l1I1 = llIllIil1iIiiIIi1ii, llI11IIi1Ill1liiiil do local ll1Ii11lilii1iIIIIl local I1lI1iii11lil1i111I = ili1ilIlllIl1li11il() if I1lI1iii11lil1i111I == #{ 5081, 1436, 2611, 5302, 4347, 2876, 1320, 3827, 3207, 5338, 3092, 4630, 3163, 1390, 5941, 3639, 171, 6288, 2565, 6702, 1531, 5019, 5308, 4334 } + IllIIlII1IllIi1Ill1 + 22 then ll1Ii11lilii1iIIIIl = #{ 344, 1755, 6163, 4144, 3130, 2668, 3351, 3226, 5531, 6014, 3465, 504, 1691, 614, 4963, 6531, 3562, 6126, 2436, 5902 } + IllIIlII1IllIi1Ill1 + 84949 == #{ 344, 1755, 6163, 4144, 3130, 2668, 3351, 3226, 5531, 6014, 3465, 504, 1691, 614, 4963, 6531, 3562, 6126, 2436, 5902 } + IllIIlII1IllIi1Ill1 + 84949 end if I1lI1iii11lil1i111I == #{ 3551, 4576, 15, 837, 4960, 4154, 1810, 4744, 1766, 2180, 981, 4737, 1633, 1452, 3444, 3593, 4948, 6815, 4035, 1049, 5273 } + IllIIlII1IllIi1Ill1 + -9 then ll1Ii11lilii1iIIIIl = ili1ilIlllIl1li11il() + I1liI111lilI1IliIi1() + Iilll1lil1lIliiI1lI() end if I1lI1iii11lil1i111I == #{ 6894, 3285, 5745, 3479, 3653, 5068, 5360, 4046, 6395, 1319, 5393, 2744, 526, 1709, 1690, 6406, 1848, 5464, 772, 3060, 6274, 6813 } + IllIIlII1IllIi1Ill1 + 70 then ll1Ii11lilii1iIIIIl = #{ 2444, 3585, 41, 1715, 6400, 2925, 28, 2006, 5671, 2186, 5084, 2760, 6748, 3260, 3683, 2209, 5265, 593, 5326, 2824, 1774, 4885, 309, 3746 } + IllIIlII1IllIi1Ill1 + 4527 == #{ 5801, 2621, 5441, 4269, 5831, 5784, 4211, 2964, 1044, 4702, 1915, 1398, 2067, 2223, 6473, 6856, 3140, 6207, 3357, 4877, 4992 } + IllIIlII1IllIi1Ill1 + 129901 end if I1lI1iii11lil1i111I == #{ 1211, 4448, 6882, 2109, 460, 5537, 530, 1742, 2519, 317, 2862, 4445, 794, 262, 5566, 3998, 3725, 6694, 2029, 929, 3090 } + IllIIlII1IllIi1Ill1 + -89 then ll1Ii11lilii1iIIIIl = ili1ilIlllIl1li11il() end if I1lI1iii11lil1i111I == #{ 6591, 81, 1150, 594, 4286, 2369, 4435, 5286, 2946, 5754, 3476, 5761, 5671, 4555, 4180, 4853, 2253, 2231, 6273, 6830 } + IllIIlII1IllIi1Ill1 + -82 then ll1Ii11lilii1iIIIIl = Iilll1lil1lIliiI1lI() end if I1lI1iii11lil1i111I == #{ 2218, 1986, 6949, 6302, 3973, 1915, 6917, 5932, 2886, 3381, 5438, 1446, 2100, 2175, 3597, 5403, 2419, 3257, 3977, 1693, 6146 } + IllIIlII1IllIi1Ill1 + 93 then ll1Ii11lilii1iIIIIl = lIlIl1I1li1Iii1lIllIi(llIiI1iII11l1I1ii11(insEncKey), #{ 13, 3934, 1412, 2852 }) end if I1lI1iii11lil1i111I == #{ 3413, 2767, 2175, 6022, 5520, 3907, 5218, 5682, 3016, 6655, 5298, 1028, 4579, 4219, 4195, 6501, 6365, 3134, 6582, 3226, 666, 449, 89, 6770 } + IllIIlII1IllIi1Ill1 + 69 then ll1Ii11lilii1iIIIIl = lIlIl1I1li1Iii1lIllIi(llIiI1iII11l1I1ii11(lIiIlIIl1I1Ii1l1i1l), #{ 1614, 2470, 2041 }) end if I1lI1iii11lil1i111I == #{ 3265, 4336, 5203, 1146, 4687, 3082, 5243, 6921, 2532, 2861, 901, 4588, 306, 1009, 75, 1008, 4713, 3887, 829, 4433, 4624, 5143, 1115 } + IllIIlII1IllIi1Ill1 + -122 then ll1Ii11lilii1iIIIIl = Iilll1lil1lIliiI1lI() end if I1lI1iii11lil1i111I == #{ 4624, 357, 6358, 4420, 4076, 728, 688, 4421, 4105, 2992, 2375, 1470, 4784, 2832, 3929, 4728, 2202, 218, 3762, 4457 } + IllIIlII1IllIi1Ill1 + -28 then ll1Ii11lilii1iIIIIl = ili1ilIlllIl1li11il() end Ill11i11Iii1l1i1iI1[4][lllIiliIiIiili1l1I1 - llIllIil1iIiiIIi1ii] = ll1Ii11lilii1iIIIIl end for lllIiliIiIiili1l1I1 = llIllIil1iIiiIIi1ii, iIiIil1IllIii1111II do local Iill1IlIi1illii1ili = Ill11i11Iii1l1i1iI1[5][lllIiliIiIiili1l1I1] local lil11ii1iiIl11i1iI1 = I1lIIil1IIlilllllIl[Iill1IlIi1illii1ili[3]] if lil11ii1iiIl11i1iI1 == #{ 4701, 4762, 693, 2233 } then Iill1IlIi1illii1ili[5] = Ill11i11Iii1l1i1iI1[4][Iill1IlIi1illii1ili[6]] end if lil11ii1iiIl11i1iI1 == #{4836, 893} and Iill1IlIi1illii1ili[2] > 255 then Iill1IlIi1illii1ili[4] = true Iill1IlIi1illii1ili[8] = Ill11i11Iii1l1i1iI1[4][Iill1IlIi1illii1ili[2] - 256] end if lil11ii1iiIl11i1iI1 == #{ 6097, 853, 1798 } then if Iill1IlIi1illii1ili[10] > 255 then Iill1IlIi1illii1ili[1] = true Iill1IlIi1illii1ili[9] = Ill11i11Iii1l1i1iI1[4][Iill1IlIi1illii1ili[10] - 256] end if Iill1IlIi1illii1ili[2] > 255 then Iill1IlIi1illii1ili[4] = true Iill1IlIi1illii1ili[8] = Ill11i11Iii1l1i1iI1[4][Iill1IlIi1illii1ili[2] - 256] end end if lil11ii1iiIl11i1iI1 == #{5112} and Iill1IlIi1illii1ili[10] > 255 then Iill1IlIi1illii1ili[1] = true Iill1IlIi1illii1ili[9] = Ill11i11Iii1l1i1iI1[4][Iill1IlIi1illii1ili[10] - 256] end end return Ill11i11Iii1l1i1iI1 end local function IiI1i11l1II11lil1ii(Ill11i11Iii1l1i1iI1, ii1IIll111il1iiIlII, ilI1IIil1Illi11lIiI) local I11i1iIIiilI1IIIIII, lIll11ill1lI111IiliI1 = 5, 7 local l1IIIii1lI111iiiIiI = Ill11i11Iii1l1i1iI1[5] local i1liilIii111lIl1111 = 6 local I11i1iil1illiliil11 = Ill11i11Iii1l1i1iI1[1] local l1li1llilllIil1Illi = Ill11i11Iii1l1i1iI1[7] local iI1l1illIl1iIil1IiI = Ill11i11Iii1l1i1iI1[2] local iii11IIIliI1l1iiI11 = 3 local lIli1ii1lillIiIllI1il = Ill11i11Iii1l1i1iI1[3] local l1lIi1iii1llIllII11 = 10 local function lII1lIiIilIIii1i1Ii(...) local lIlilii1lIIIl1Iiii1 = 0 local IiillI1iil1liIlli1I = { I1lill1lIII1l1Iiiil({}, 1, iI1l1illIl1iIil1IiI) } local lIl11lliIIll1IIii1Ill = 1 local lIlIi1iI1iiliiiillIII = {} local lI11i1li11iIliIIlii = {} local ii1IIll111il1iiIlII = lIlii1Ii1ll1iIIlilli1() local l1lIilIliiIilI1liIl = { ... } local li1illil1i1il1ilI1i = #l1lIilIliiIilI1liIl - 1 for lllIiliIiIiili1l1I1 = 0, li1illil1i1il1ilI1i do if lllIiliIiIiili1l1I1 < l1li1llilllIil1Illi then IiillI1iil1liIlli1I[lllIiliIiIiili1l1I1] = l1lIilIliiIilI1liIl[lllIiliIiIiili1l1I1 + 1] end end local function lIlI1illi1l11iIilI1li(...) local illIlIll1i1iII1llIl = lIlI1ilI1ii1iI1l11l1l("#", ...) local i1I11llII11IIiIil11 = { ... } return illIlIll1i1iII1llIl, i1I11llII11IIiIil11 end local function i111l111IIlIi1I1i1l() while true do local ilil11IliII1l11i1il = l1IIIii1lI111iiiIiI[lIl11lliIIll1IIii1Ill] local II1liilI11I1li1llli = ilil11IliII1l11i1il[3] lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill + 1 if II1liilI11I1li1llli < 9 then if II1liilI11I1li1llli < 4 then if II1liilI11I1li1llli < 2 then if II1liilI11I1li1llli == 1 then if ilil11IliII1l11i1il[2] == 111 then lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill - 1 l1IIIii1lI111iiiIiI[lIl11lliIIll1IIii1Ill] = { [3] = 2, [7] = (ilil11IliII1l11i1il[7] - 200) % 256, [2] = (ilil11IliII1l11i1il[10] - 200) % 256 } else local lIli1Iil11i1ii1iI1iI1 = ilil11IliII1l11i1il[7] local lIll1i1iI1ili1Il1Ii = {} for i1illIllIi11lli1I1I, lIl1il1ll111IliIiI1iI in pairs(lIlIi1iI1iiliiiillIII[IiillI1iil1liIlli1I]) do for i1illIllIi11lli1I1I, i1llliI11illIIiillI in pairs(lIl1il1ll111IliIiI1iI) do if i1llliI11illIIiillI[1] == IiillI1iil1liIlli1I and lIli1Iil11i1ii1iI1iI1 <= i1llliI11illIIiillI[2] then local lIlillIlil1i1l11l11l1 = i1llliI11illIIiillI[2] if not lIll1i1iI1ili1Il1Ii[lIlillIlil1i1l11l11l1] then IiI1i11l1II11lil1ii(lI11i1li11iIliIIlii, IiillI1iil1liIlli1I[lIlillIlil1i1l11l11l1]) lIll1i1iI1ili1Il1Ii[lIlillIlil1i1l11l11l1] = #lI11i1li11iIliIIlii end i1llliI11illIIiillI[1] = lI11i1li11iIliIIlii i1llliI11illIIiillI[2] = lIll1i1iI1ili1Il1Ii[lIlillIlil1i1l11l11l1] end end end end else local illIlIll1i1iII1llIl if ilil11IliII1l11i1il[4] then illIlIll1i1iII1llIl = ilil11IliII1l11i1il[8] else illIlIll1i1iII1llIl = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[2]] end IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[10]][illIlIll1i1iII1llIl] end elseif II1liilI11I1li1llli ~= 3 then if not not IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] == (ilil11IliII1l11i1il[2] == 0) then lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill + 1 end else lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill + (ilil11IliII1l11i1il[6] - lIl11Ill1lll1I1IiIllI) end elseif II1liilI11I1li1llli >= 6 then if II1liilI11I1li1llli < 7 then local lIlliili11iII1II1i11i, illIlIll1i1iII1llIl if ilil11IliII1l11i1il[1] then lIlliili11iII1II1i11i = ilil11IliII1l11i1il[9] else lIlliili11iII1II1i11i = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[10]] end if ilil11IliII1l11i1il[4] then illIlIll1i1iII1llIl = ilil11IliII1l11i1il[8] else illIlIll1i1iII1llIl = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[2]] end if lIlliili11iII1II1i11i == illIlIll1i1iII1llIl ~= (ilil11IliII1l11i1il[7] ~= 0) then lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill + 1 end elseif II1liilI11I1li1llli == 8 then IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] = ilil11IliII1l11i1il[5] elseif ilil11IliII1l11i1il[2] == 19 then lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill - 1 l1IIIii1lI111iiiIiI[lIl11lliIIll1IIii1Ill] = { [3] = 16, [7] = (ilil11IliII1l11i1il[7] - 130) % 256, [2] = (ilil11IliII1l11i1il[10] - 130) % 256 } else IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] = ilI1IIil1Illi11lIiI[ilil11IliII1l11i1il[10]] end elseif II1liilI11I1li1llli == 5 then IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[10]] elseif ilil11IliII1l11i1il[2] == 181 then lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill - 1 l1IIIii1lI111iiiIiI[lIl11lliIIll1IIii1Ill] = { [3] = 5, [7] = (ilil11IliII1l11i1il[7] - 61) % 256, [10] = (ilil11IliII1l11i1il[10] - 61) % 256 } elseif ilil11IliII1l11i1il[2] == 209 then lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill - 1 l1IIIii1lI111iiiIiI[lIl11lliIIll1IIii1Ill] = { [3] = 7, [7] = (ilil11IliII1l11i1il[7] - 136) % 256, [10] = (ilil11IliII1l11i1il[10] - 136) % 256 } else ilI1IIil1Illi11lIiI[ilil11IliII1l11i1il[10]] = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] end elseif II1liilI11I1li1llli < 14 then if II1liilI11I1li1llli >= 11 then if II1liilI11I1li1llli >= 12 then if II1liilI11I1li1llli ~= 13 then ii1IIll111il1iiIlII[ilil11IliII1l11i1il[5]] = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] else lIlIi1iI1iiliiiillIII[IiillI1iil1liIlli1I] = nil local IIil1I11Ili1liiIl1I = ilil11IliII1l11i1il[7] local lIlIlIlIliilII11Il1l1 = ilil11IliII1l11i1il[10] if lIlIlIlIliilII11Il1l1 == 1 then return true end local I111illI1Il1i11Il1i = IIil1I11Ili1liiIl1I + lIlIlIlIliilII11Il1l1 - 2 if lIlIlIlIliilII11Il1l1 == 0 then I111illI1Il1i11Il1i = lIlilii1lIIIl1Iiii1 end return true, IIil1I11Ili1liiIl1I, I111illI1Il1i11Il1i end else IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] = ii1IIll111il1iiIlII[ilil11IliII1l11i1il[5]] end elseif II1liilI11I1li1llli ~= 10 then local lIlliili11iII1II1i11i, illIlIll1i1iII1llIl if ilil11IliII1l11i1il[1] then lIlliili11iII1II1i11i = ilil11IliII1l11i1il[9] else lIlliili11iII1II1i11i = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[10]] end if ilil11IliII1l11i1il[4] then illIlIll1i1iII1llIl = ilil11IliII1l11i1il[8] else illIlIll1i1iII1llIl = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[2]] end IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] = lIlliili11iII1II1i11i + illIlIll1i1iII1llIl else local IIil1I11Ili1liiIl1I = ilil11IliII1l11i1il[7] local l1lIilIliiIilI1liIl = ilil11IliII1l11i1il[10] local iii1li11i1iiIiiliiI = ilil11IliII1l11i1il[2] local i1ii11l1l1iIIIil11i, I111illI1Il1i11Il1i, i111l111IIlIi1I1i1l if l1lIilIliiIilI1liIl ~= 1 then if l1lIilIliiIilI1liIl ~= 0 then I111illI1Il1i11Il1i = IIil1I11Ili1liiIl1I + l1lIilIliiIilI1liIl - 1 else I111illI1Il1i11Il1i = lIlilii1lIIIl1Iiii1 end I111illI1Il1i11Il1i, i1ii11l1l1iIIIil11i = lIlI1illi1l11iIilI1li(IiillI1iil1liIlli1I[IIil1I11Ili1liiIl1I](I1lill1lIII1l1Iiiil(IiillI1iil1liIlli1I, IIil1I11Ili1liiIl1I + 1, I111illI1Il1i11Il1i))) else I111illI1Il1i11Il1i, i1ii11l1l1iIIIil11i = lIlI1illi1l11iIilI1li(IiillI1iil1liIlli1I[IIil1I11Ili1liiIl1I]()) end if iii1li11i1iiIiiliiI ~= 1 then if iii1li11i1iiIiiliiI ~= 0 then I111illI1Il1i11Il1i = IIil1I11Ili1liiIl1I + iii1li11i1iiIiiliiI - 2 lIlilii1lIIIl1Iiii1 = I111illI1Il1i11Il1i + 1 else I111illI1Il1i11Il1i = I111illI1Il1i11Il1i + IIil1I11Ili1liiIl1I - 1 lIlilii1lIIIl1Iiii1 = I111illI1Il1i11Il1i end i111l111IIlIi1I1i1l = 0 for lllIiliIiIiili1l1I1 = IIil1I11Ili1liiIl1I, I111illI1Il1i11Il1i do i111l111IIlIi1I1i1l = i111l111IIlIi1I1i1l + 1 IiillI1iil1liIlli1I[lllIiliIiIiili1l1I1] = i1ii11l1l1iIIIil11i[i111l111IIlIi1I1i1l] end else lIlilii1lIIIl1Iiii1 = IIil1I11Ili1liiIl1I - 1 end for lllIiliIiIiili1l1I1 = lIlilii1lIIIl1Iiii1 + 1, iI1l1illIl1iIil1IiI do IiillI1iil1liIlli1I[lllIiliIiIiili1l1I1] = nil end end elseif II1liilI11I1li1llli >= 16 then if II1liilI11I1li1llli < 17 then local IIil1I11Ili1liiIl1I = ilil11IliII1l11i1il[7] local lIiili11ll1IIiIiI1i = IIil1I11Ili1liiIl1I + 2 local lIl1IIi11Iiii1illiIII = { IiillI1iil1liIlli1I[IIil1I11Ili1liiIl1I](IiillI1iil1liIlli1I[IIil1I11Ili1liiIl1I + 1], IiillI1iil1liIlli1I[IIil1I11Ili1liiIl1I + 2]) } for lllIiliIiIiili1l1I1 = 1, ilil11IliII1l11i1il[2] do IiillI1iil1liIlli1I[lIiili11ll1IIiIiI1i + lllIiliIiIiili1l1I1] = lIl1IIi11Iiii1illiIII[lllIiliIiIiili1l1I1] end if IiillI1iil1liIlli1I[IIil1I11Ili1liiIl1I + 3] ~= nil then IiillI1iil1liIlli1I[IIil1I11Ili1liiIl1I + 2] = IiillI1iil1liIlli1I[IIil1I11Ili1liiIl1I + 3] else lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill + 1 end elseif II1liilI11I1li1llli == 18 then local l1llIlIlIll1IIlII1i = I11i1iil1illiliil11[ilil11IliII1l11i1il[6]] local lIl1iIIi1lIiIliiiil1l = {} if l1llIlIlIll1IIlII1i[i1liilIii111lIl1111] > 0 then do local lIl1il1ll111IliIiI1iI = {} lIl1iIIi1lIiIliiiil1l = lIll1iiIilll11iIl11Ii({}, { __index = function(i1I11llII11IIiIil11, lIliiIiIlll1IIIl1ii1I) local i1llliI11illIIiillI = lIl1il1ll111IliIiI1iI[lIliiIiIlll1IIIl1ii1I] return i1llliI11illIIiillI[1][i1llliI11illIIiillI[2]] end, __newindex = function(i1I11llII11IIiIil11, lIliiIiIlll1IIIl1ii1I, I1II1lI1IIIi1lIIll1) local i1llliI11illIIiillI = lIl1il1ll111IliIiI1iI[lIliiIiIlll1IIIl1ii1I] i1llliI11illIIiillI[1][i1llliI11illIIiillI[2]] = I1II1lI1IIIi1lIIll1 end }) for lllIiliIiIiili1l1I1 = 1, l1llIlIlIll1IIlII1i[i1liilIii111lIl1111] do local llIi1l1i1Illl1i1I1I = l1IIIii1lI111iiiIiI[lIl11lliIIll1IIii1Ill] if llIi1l1i1Illl1i1I1I[iii11IIIliI1l1iiI11] == I11i1iIIiilI1IIIIII then lIl1il1ll111IliIiI1iI[lllIiliIiIiili1l1I1 - 1] = { IiillI1iil1liIlli1I, llIi1l1i1Illl1i1I1I[l1lIi1iii1llIllII11] } elseif llIi1l1i1Illl1i1I1I[iii11IIIliI1l1iiI11] == lIll11ill1lI111IiliI1 then lIl1il1ll111IliIiI1iI[lllIiliIiIiili1l1I1 - 1] = { ilI1IIil1Illi11lIiI, llIi1l1i1Illl1i1I1I[l1lIi1iii1llIllII11] } end lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill + 1 end if not lIlIi1iI1iiliiiillIII[IiillI1iil1liIlli1I] then lIlIi1iI1iiliiiillIII[IiillI1iil1liIlli1I] = {lIl1il1ll111IliIiI1iI} else l1ll1lliiI1lI1iI1il(lIlIi1iI1iiliiiillIII[IiillI1iil1liIlli1I], lIl1il1ll111IliIiI1iI) end end end local lIl11111IililliI1111i = IiI1i11l1II11lil1ii(l1llIlIlIll1IIlII1i, ii1IIll111il1iiIlII, lIl1iIIi1lIiIliiiil1l) IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] = lIl11111IililliI1111i else local liliIiiiIiI11IlIlii = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[10]] local illIlIll1i1iII1llIl if ilil11IliII1l11i1il[4] then illIlIll1i1iII1llIl = ilil11IliII1l11i1il[8] else illIlIll1i1iII1llIl = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[2]] end IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7] + 1] = liliIiiiIiI11IlIlii IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]] = liliIiiiIiI11IlIlii[illIlIll1i1iII1llIl] end elseif II1liilI11I1li1llli == 15 then local lIlliili11iII1II1i11i, illIlIll1i1iII1llIl if ilil11IliII1l11i1il[1] then lIlliili11iII1II1i11i = ilil11IliII1l11i1il[9] else lIlliili11iII1II1i11i = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[10]] end if ilil11IliII1l11i1il[4] then illIlIll1i1iII1llIl = ilil11IliII1l11i1il[8] else illIlIll1i1iII1llIl = IiillI1iil1liIlli1I[ilil11IliII1l11i1il[2]] end IiillI1iil1liIlli1I[ilil11IliII1l11i1il[7]][lIlliili11iII1II1i11i] = illIlIll1i1iII1llIl elseif ilil11IliII1l11i1il[2] == 9 then lIl11lliIIll1IIii1Ill = lIl11lliIIll1IIii1Ill - 1 l1IIIii1lI111iiiIiI[lIl11lliIIll1IIii1Ill] = { [3] = 13, [7] = (ilil11IliII1l11i1il[7] - 117) % 256, [10] = (ilil11IliII1l11i1il[10] - 117) % 256 } else local IIil1I11Ili1liiIl1I = ilil11IliII1l11i1il[7] local llI11IIi1Ill1liiiil = ilil11IliII1l11i1il[10] local i1li1Illill11Il1Iii = llI11IIi1Ill1liiiil > 0 and llI11IIi1Ill1liiiil - 1 or li1illil1i1il1ilI1i - l1li1llilllIil1Illi if i1li1Illill11Il1Iii < 0 then i1li1Illill11Il1Iii = -1 end for lllIiliIiIiili1l1I1 = IIil1I11Ili1liiIl1I, IIil1I11Ili1liiIl1I + i1li1Illill11Il1Iii do IiillI1iil1liIlli1I[lllIiliIiIiili1l1I1] = l1lIilIliiIilI1liIl[l1li1llilllIil1Illi + (lllIiliIiIiili1l1I1 - IIil1I11Ili1liiIl1I) + 1] end if llI11IIi1Ill1liiiil == 0 then lIlilii1lIIIl1Iiii1 = IIil1I11Ili1liiIl1I + i1li1Illill11Il1Iii for lllIiliIiIiili1l1I1 = lIlilii1lIIIl1Iiii1 + 1, iI1l1illIl1iIil1IiI do IiillI1iil1liIlli1I[lllIiliIiIiili1l1I1] = nil end end end end end local illI1ii1ilIIili11lI, i1111lI11i1IIi11IIi, lIli1Iil11i1ii1iI1iI1, iIIlIilIl1ilIiliII1 = lIliIlIIi1I111i1l1iil(i111l111IIlIi1I1i1l) if illI1ii1ilIIili11lI then if lIli1Iil11i1ii1iI1iI1 then return I1lill1lIII1l1Iiiil(IiillI1iil1liIlli1I, lIli1Iil11i1ii1iI1iI1, iIIlIilIl1ilIiliII1) end else I1illIIIlIilllIilll("Luraph Script:" .. (lIli1ii1lillIiIllI1il[lIl11lliIIll1IIii1Ill - 1] or "") .. ": " .. IiI1II11i111llIIi11(i1111lI11i1IIi11IIi), 0) end end lIl1ii1l11IIiIIliIi11(lII1lIiIilIIii1i1Ii, ii1IIll111il1iiIlII) return lII1lIiIilIIii1i1Ii end local lIll1i1iI1ili1Il1Ii = llilli1i11illl1Ili1() return IiI1i11l1II11lil1ii(lIll1i1iI1ili1Il1Ii, ii1IIll111il1iiIlII)() end lIl1lIilIIill1IIlIl1llIlii1Ii1ll1iIIlilli1()) 
